
@book{laski2009software,
  title={{Software Verification and Analysis}},
  author={Laski, J. and Stanley, W.},
  isbn={9781848822405},
  url={http://books.google.rs/books?id=5hFnaDQ1jiAC},
  year={2009},
  publisher={Springer-Verlag},
  address = {London}
}

@misc{gcc,
title = {{GNU gcc}},
note = {on-line at: \url{http://gcc.gnu.org/}},
    author = {Free Software Foundation},
    year = {2013}
}


@article{haltingproblem,
    author = {Turing, A. M.},
    citeulike-article-id = {155758},
    journal = {Proceedings of the London Mathematical Society},
    keywords = {computability, entscheidungsproblem, turing},
    number = {42},
    pages = {230--265},
    posted-at = {2005-04-08 18:11:59},
    priority = {0},
    title = {{On Computable Numbers, with an application to the Entscheidungsproblem}},
    volume = {2},
    year = {1936}
}

@mastersthesis{staticFeatures,
    author = {Hannes Tribus},
    school = {School of Engineering Blekinge Institute of Technology, Sweden},
    keywords = {static source code analysis, machine learning, feature selection, fault detection},
    pages = {1--43},
    title = {{Static Code Features for a Machine Learning based Inspection}},
    year = {2010},
    month = 5,
}

@misc{baca,
    author = {Dejan Baca},
    title = {{Automated static code analysis : a tool for early vulnerabilitydetection}},
    school = {School of Engineering Blekinge Institute of Technology},
    year = {2009}
}

@unpublished{micovic,
    author = {Lazar Ranković, Nemanja Mićović, Uroš Stegić},
    year = {2017},
    title = {Primena mašinskog učenja u statičkoj verifikaciji softvera},
    note = {Matematički fakultet, Univerzitet u Beogradu. Srbija}
}

@techreport{verify,
	author = {Lutz Hamel},
	year = {2003},
	title = {On the Use of Machine Learning in Formal Software Verification},
	institution = {Dept. of Computer Science and Statistics, University of Rhode Island},
    address = {USA}
}

@techreport{equationaltheory,
	author = {Lutz Hamel},
	year = {2000},
	title = {An algebraic view of inductive equational logical programming},
	institution = {Dept. of Computer Science and Statistics, University of Rhode Island},
    address = { USA }
}



@article{staticAnalyzer,
	author    = {Pavol Bielik and
	Veselin Raychev and
	Martin T. Vechev},
	title     = {Learning a Static Analyzer from Data},
	journal   = {CoRR},
	volume    = {abs/1611.01752},
	year      = {2016},
	url       = {http://arxiv.org/abs/1611.01752},
	archivePrefix = {arXiv},
	eprint    = {1611.01752},
	timestamp = {Wed, 07 Jun 2017 14:40:19 +0200},
	biburl    = {https://dblp.org/rec/bib/journals/corr/BielikRV16},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{predictingProgramProperties,
	author = {Raychev, Veselin and Vechev, Martin and Krause, Andreas},
	title = {Predicting Program Properties from "Big Code"},
	booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
	series = {POPL '15},
	year = {2015},
	isbn = {978-1-4503-3300-9},
	location = {Mumbai, India},
	pages = {111--124},
	numpages = {14},
	url = {http://doi.acm.org/10.1145/2676726.2677009},
	doi = {10.1145/2676726.2677009},
	acmid = {2677009},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {big code, closure compiler, conditional random fields, javascript, names, program properties, structured prediction, types},
}

@inproceedings{statisticalLearningTheory,
	title={Statistical Learning Theory: Models, Concepts, and Results},
	author={Ulrike von Luxburg and Bernhard Sch{\"o}lkopf},
	booktitle={Inductive Logic},
	pages = {651--706},
	year={2011}
}


@misc{flow,
	title = {Facebook Flow: Static typechecker for javascript.},
	howpublished = {\url{https://github.com/facebook/flow}},
	note = {Accessed: 2018-04-18}
}

@inproceedings{tajs,
	author = {Jeon, Jinseong and Qiu, Xiaokang and Fetter-Degges, Jonathan and Foster, Jeffrey S. and Solar-Lezama, Armando},
	title = {Synthesizing Framework Models for Symbolic Execution},
	booktitle = {Proceedings of the 38th International Conference on Software Engineering},
	series = {ICSE '16},
	year = {2016},
	isbn = {978-1-4503-3900-1},
	location = {Austin, Texas},
	pages = {156--167},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/2884781.2884856},
	doi = {10.1145/2884781.2884856},
	acmid = {2884856},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {framework model, program synthesis, sketch, symbolic execution}
}

@book{bishopML,
	author = {Bishop, Christopher M.},
	title = {Pattern Recognition and Machine Learning (Information Science and Statistics)},
	year = {2006},
	isbn = {0387310738},
	publisher = {Springer-Verlag New York, Inc.},
	address = {Secaucus, NJ, USA}
}


@article{id3,
	author="Quinlan, J. R.",
	title="Induction of decision trees",
	journal="Machine Learning",
	year="1986",
	month="Mar",
	day="01",
	volume="1",
	number="1",
	pages="81--106",
	issn="1573-0565",
	doi="10.1007/BF00116251",
	url="https://doi.org/10.1007/BF00116251"
}

@article{testing,
	author = {Godefroid, Patrice and Levin, Michael Y. and Molnar, David},
	title = {SAGE: Whitebox Fuzzing for Security Testing},
	journal = {Queue},
	issue_date = {January 2012},
	volume = {10},
	number = {1},
	month = jan,
	year = {2012},
	issn = {1542-7730},
	pages = {20:20--20:27},
	articleno = {20},
	numpages = {8},
	url = {http://doi.acm.org/10.1145/2090147.2094081},
	doi = {10.1145/2090147.2094081},
	acmid = {2094081},
	publisher = {ACM},
	address = {New York, NY, USA}
}

@unpublished{milena,
	author = {Milena Vujošević Janičić},
	title = {Verifikacija softvera -- materijali sa predavanja},
	year = {2018},
	note = {Matematički fakultet, Univerzitet u Beogradu, Srbija}
}

@inproceedings{online-testing-with-reinforcement-learning,
author = {Veanes, Margus and Roy, Pritam and Campbell, Colin},
title = {Online Testing with Reinforcement Learning},
booktitle = {Formal Approaches to Software Testing and Runtime Verification, FATES/RV 2006},
year = {2006},
month = {January},
abstract = {Online testing is a practical technique where test derivation and test execution are combined into a single algorithm. In this paper we describe a new online testing algorithm that optimizes the choice of test actions using Reinforcement Learning (RL) techniques. This provides an advantage in covering system behaviors in less time than with a purely random choice of test actions. Online testing with conformance checking is modeled as a 1.5 player game, or Markov Decision Process (MDP), between the tester as one player and the implementation under test (IUT) as the opponent. Our approach has been implemented in C#, and benchmark results are presented in the paper. The specifications that generate the tests are written as model programs in any .NET language such as C# or VB.
},
publisher = {Springer Verlag},
url = {https://www.microsoft.com/en-us/research/publication/online-testing-with-reinforcement-learning/},
address = {},
pages = {240-253},
journal = {},
volume = {4262},
chapter = {},
isbn = {},
}

@InProceedings{antiAnt,
author="Li, Huaizhong
and Lam, C. Peng",
editor="Khendek, Ferhat
and Dssouli, Rachida",
title="Using Anti-Ant-like Agents to Generate Test Threads from the UML Diagrams",
booktitle="Testing of Communicating Systems",
year="2005",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="69--80",
abstract="The problem of generating the test cases is one of the most important issues in the software testing research and practice. Test threads, especially the thin-threads which are the usage scenarios in a software system, are frequently used to generate test cases for the scenario-based software testing. However, the derivation of the test threads is usually a manual and labor-intensive task. In this paper, we propose an automated approach using anti-ant-like agents to directly generate test threads from the UML artifacts. The generated test threads can then be used to generate and to prioritize the test cases for scenario-based software testing.",
isbn="978-3-540-32076-0"
}

@inproceedings{interfaceAutomata,
 author = {de Alfaro, Luca and Henzinger, Thomas A.},
 title = {Interface Automata},
 booktitle = {Proceedings of the 8th European Software Engineering Conference Held Jointly with 9th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {ESEC/FSE-9},
 year = {2001},
 isbn = {1-58113-390-1},
 location = {Vienna, Austria},
 pages = {109--120},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/503209.503226},
 doi = {10.1145/503209.503226},
 acmid = {503226},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{aprioriAnaliza,
	author = {Gaudel, Marie-Claude},
	title = {Testing Can Be Formal, Too},
	booktitle = {Proceedings of the 6th International Joint Conference CAAP/FASE on Theory and Practice of Software Development},
	series = {TAPSOFT '95},
	year = {1995},
	isbn = {3-540-59293-8},
	pages = {82--96},
	numpages = {15},
	url = {http://dl.acm.org/citation.cfm?id=646619.697560},
	acmid = {697560},
	publisher = {Springer-Verlag},
	address = {London, UK, UK},
}
